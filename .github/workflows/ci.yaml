name: Monorepo CI - Build and Publish Changed Submodules

on:
  push:
    branches:
      - main
    paths:
      - 'apps/**'
  workflow_dispatch:
    inputs:
      apps_to_build:
        description: 'Space-separated list of app paths to build (e.g., "apps/homepage apps/api/stats"). Leave blank to build all.'
        required: false
        default: ''

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      changed_apps_matrix: ${{ steps.set-matrix.outputs.matrix }}
      all_paths: ${{ steps.discover-submodules.outputs.submodule_paths }}
      all_urls: ${{ steps.discover-submodules.outputs.submodule_urls }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Discover all submodule paths and URLs
        id: discover-submodules
        run: |
          SUBMODULE_PATHS=$(git config -f .gitmodules --get-regexp path | awk '{ print $2 }' | tr '\n' ' ')
          SUBMODULE_URLS=$(git config -f .gitmodules --get-regexp url | awk '{ print $2 }' | tr '\n' ' ')
          echo "submodule_paths=$SUBMODULE_PATHS" >> $GITHUB_OUTPUT
          echo "submodule_urls=$SUBMODULE_URLS" >> $GITHUB_OUTPUT
          echo "--- All Discovered Submodules ---"
          echo "$SUBMODULE_PATHS"
          echo "---------------------------------"

      - name: Get Changed Submodules on Push
        id: changed-submodules-push
        if: github.event_name == 'push'
        uses: tj-actions/changed-files@v44
        with:
          files: ${{ steps.discover-submodules.outputs.submodule_paths }}

      - name: Set Matrix for Build Job
        id: set-matrix
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ "${{ github.event.inputs.apps_to_build }}" != "" ]]; then
              echo "Manual trigger: Building specified apps..."
              MATRIX_STRING=$(echo "${{ github.event.inputs.apps_to_build }}" | jq -R 'split(" ")' | jq -c '.')
            else
              echo "Manual trigger: Building all apps..."
              MATRIX_STRING=$(echo "${{ steps.discover-submodules.outputs.submodule_paths }}" | jq -R 'split(" ")' | jq -c '.')
            fi
          else
            echo "Push trigger: Building changed apps..."
            MATRIX_STRING='${{ steps.changed-submodules-push.outputs.all_changed_files }}'
          fi
          echo "Final build matrix: $MATRIX_STRING"
          echo "matrix=$MATRIX_STRING" >> $GITHUB_OUTPUT

  build-and-publish:
    if: needs.discover.outputs.changed_apps_matrix != '[]'
    needs: discover
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        app_dir: ${{ fromJson(needs.discover.outputs.changed_apps_matrix) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        env:
          ALL_PATHS: ${{ needs.discover.outputs.all_paths }}
          ALL_URLS: ${{ needs.discover.outputs.all_urls }}
        run: |
          all_paths_array=($ALL_PATHS)
          all_urls_array=($ALL_URLS)
          for i in "${!all_paths_array[@]}"; do
            if [[ "${all_paths_array[$i]}" == "${{ matrix.app_dir }}" ]]; then
              URL_INDEX=$i
              break
            fi
          done
          REPO_URL=${all_urls_array[$URL_INDEX]}
          REPO_NAME=$(basename -s .git "$REPO_URL")
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/${REPO_NAME}:latest"
          echo "Building and pushing image for ${{ matrix.app_dir }}"
          echo "Image will be tagged as: ${IMAGE_NAME}"
          docker buildx build \
            --push \
            --platform linux/amd64,linux/arm64 \
            --tag "${IMAGE_NAME}" \
            --file "${{ matrix.app_dir }}/Dockerfile" \
            "${{ matrix.app_dir }}"