name: Monorepo CI - Build and Publish Changed Submodules

on:
  push:
    branches:
      - main
    paths:
      - 'apps/**'
  workflow_dispatch:

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      changed_apps_matrix: ${{ steps.changed-submodules.outputs.all_changed_files }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Discover all submodule paths and URLs
        id: discover-submodules
        run: |
          # Create a JSON array of objects, each containing the path and URL for a submodule.
          # This is a more robust way to pass data between jobs.
          SUBMODULE_JSON=$(git config -f .gitmodules --get-regexp 'path|url' | \
            awk '{key=$1; value=$2; if (key ~ /path$/) {path=value} else if (key ~ /url$/) {url=value; printf "{\"path\":\"" path "\",\"url\":\"" url "\"},"}}' | \
            sed 's/,$//' | awk '{print "["$0"]"}')
          echo "Discovered submodules: $SUBMODULE_JSON"
          echo "submodule_list=$SUBMODULE_JSON" >> $GITHUB_OUTPUT

      - name: Get Changed Submodule Directories
        id: changed-submodules
        uses: tj-actions/changed-files@v44
        with:
          files_from_source_file: ${{ steps.discover-submodules.outputs.submodule_list }}
          source_file_path_filter: "path"

  build-and-publish:
    if: needs.discover.outputs.changed_apps_matrix != '[]'
    needs: discover
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        app: ${{ fromJson(needs.discover.outputs.changed_apps_matrix) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          # Extract the repository name from the URL (e.g., "git@github.com:user/pi-stats.git" -> "pi-stats")
          REPO_NAME=$(basename -s .git ${{ matrix.app.url }})
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/${REPO_NAME}:latest"

          echo "Building and pushing image for ${{ matrix.app.path }}"
          echo "Image will be tagged as: ${IMAGE_NAME}"

          docker buildx build \
            --push \
            --platform linux/amd64,linux/arm64 \
            --tag "${IMAGE_NAME}" \
            --file "${{ matrix.app.path }}/Dockerfile" \
            "${{ matrix.app.path }}"