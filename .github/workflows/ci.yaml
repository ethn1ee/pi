name: Monorepo CI - Build and Publish Changed Submodules

on:
  push:
    branches:
      - main
    paths:
      - 'apps/**'
  workflow_dispatch:

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      # Output a simple, space-separated list of changed submodule paths
      changed_paths: ${{ steps.changed-submodules.outputs.all_changed_files_in_a_single_string }}
      # Output all submodule paths and URLs for the next job to use
      all_paths: ${{ steps.discover-submodules.outputs.submodule_paths }}
      all_urls: ${{ steps.discover-submodules.outputs.submodule_urls }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Discover all submodule paths and URLs
        id: discover-submodules
        run: |
          # Get all paths and URLs, format them as single-line, space-separated strings
          SUBMODULE_PATHS=$(git config -f .gitmodules --get-regexp path | awk '{ print $2 }' | tr '\n' ' ')
          SUBMODULE_URLS=$(git config -f .gitmodules --get-regexp url | awk '{ print $2 }' | tr '\n' ' ')
          echo "submodule_paths=$SUBMODULE_PATHS" >> $GITHUB_OUTPUT
          echo "submodule_urls=$SUBMODULE_URLS" >> $GITHUB_OUTPUT

      - name: Get Changed Submodule Directories
        id: changed-submodules
        uses: tj-actions/changed-files@v44
        with:
          files: ${{ steps.discover-submodules.outputs.submodule_paths }}

  build-and-publish:
    if: needs.discover.outputs.changed_paths != ''
    needs: discover
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        # Create a job for each changed submodule path
        app_dir: ${{ fromJson(format('[{0}]', needs.discover.outputs.changed_paths)) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          # Convert the full lists of paths and URLs into shell arrays
          ALL_PATHS=(${all_paths})
          ALL_URLS=(${all_urls})

          # Find the index of the current app_dir in the paths array
          for i in "${!ALL_PATHS[@]}"; do
            if [[ "${ALL_PATHS[$i]}" == "${{ matrix.app_dir }}" ]]; then
              URL_INDEX=$i
              break
            fi
          done

          # Get the corresponding URL using the found index
          REPO_URL=${ALL_URLS[$URL_INDEX]}
          REPO_NAME=$(basename -s .git "$REPO_URL")
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/${REPO_NAME}:latest"

          echo "Building and pushing image for ${{ matrix.app_dir }}"
          echo "Image will be tagged as: ${IMAGE_NAME}"

          docker buildx build \
            --push \
            --platform linux/amd64,linux/arm64 \
            --tag "${IMAGE_NAME}" \
            --file "${{ matrix.app_dir }}/Dockerfile" \
            "${{ matrix.app_dir }}"
        env:
          all_paths: ${{ needs.discover.outputs.all_paths }}
          all_urls: ${{ needs.discover.outputs.all_urls }}
