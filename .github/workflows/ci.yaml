name: Monorepo CI - Build and Publish Changed Submodules

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'apps/**' # Only run if something inside the 'apps' directory changes

jobs:
  # This job discovers which applications (submodules) have changed.
  discover:
    runs-on: ubuntu-latest
    outputs:
      # This output will be a JSON array string, e.g., '["apps/homepage", "apps/api/stats"]'
      # It will be used by the next job to create the matrix.
      changed_apps_matrix: ${{ steps.changed-submodules.outputs.all_changed_files }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Discover all submodule paths
        id: discover-submodules
        run: |
          SUBMODULE_PATHS=$(git config -f .gitmodules --get-regexp path | awk '{ print $2 }')
          echo "Discovered submodules: $SUBMODULE_PATHS"
          echo "submodule_list=$SUBMODULE_PATHS" >> $GITHUB_OUTPUT

      - name: Get Changed Submodule Directories
        id: changed-submodules
        uses: tj-actions/changed-files@v44
        with:
          files: ${{ steps.discover-submodules.outputs.submodule_list }}

  # This job builds and publishes only the applications that were identified by the 'discover' job.
  build-and-publish:
    # This job will only run if the 'discover' job found changes.
    if: needs.discover.outputs.changed_apps_matrix != '[]'
    needs: discover # This job depends on the 'discover' job to finish first.
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      # The matrix is now correctly defined at the job level.
      # It is built from the JSON output of the 'discover' job.
      matrix:
        app_dir: ${{ fromJson(needs.discover.outputs.changed_apps_matrix) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          # Create a descriptive image name from the submodule path.
          # e.g., "apps/api/stats" becomes "api-stats"
          IMAGE_NAME_SUFFIX=$(echo "${{ matrix.app_dir }}" | sed 's|apps/||' | sed 's|/|-|g')
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/pi-${IMAGE_NAME_SUFFIX}:latest"

          echo "Building and pushing image for ${{ matrix.app_dir }}"
          echo "Image will be tagged as: ${IMAGE_NAME}"

          docker buildx build \
            --push \
            --platform linux/amd64,linux/arm64 \
            --tag "${IMAGE_NAME}" \
            --file "${{ matrix.app_dir }}/Dockerfile" \
            "${{ matrix.app_dir }}"
